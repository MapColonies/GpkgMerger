global:
  cloudProvider: {}
  tracing: {}
  metrics: {}
  environment: {}
  useNodeAffinity: false
  storage:
    fs:
      ingestionSourcePvc:
        name: ""
        subPath: ""
      internalPvc:
        name: ""
        tilesSubPath: ""
        gpkgSubPath: ""
    s3:
      endpointUrl: "localhost:9000"
      tilesBucket: ""
      secretName: "s3-secret"
      sslEnabled: false
      request:
        timeoutSec: 5
        retries: 3
      logToConsole: false
  serviceUrls:
    jobManager: http://localhost:8084
    heartbeatManager: http://localhost:8082
  ca:
    secretName: ''
    path: '/usr/local/share/ca-certificates'
    key: 'ca.crt'

enabled: true
environment: development
replicaCount: 1
initialDelaySeconds: 60
nodePort: 30011
resetOnConfigChange: true
isExporter: false

cloudProvider:
  dockerRegistryUrl: 'my-registry'
  imagePullSecretName: 'my-registry-secret'
  flavor: openshift

image:
  repository: gpkg-merger
  tag: 'latest'

serviceUrls:
  jobManager: ""
  heartbeatManager: ""

storage:
  fs:
    ingestionSourcePvc:
      name: ""
      subPath: ""
    internalPvc:
      name: ""
      tilesSubPath: ""
      gpkgSubPath: ""
  s3:
    endpointUrl: ""
    tilesBucket: ""
    secretName: ""
    sslEnabled: false
    request:
      timeoutSec: 5
      retries: 3
    logToConsole: false

env:
  protocol: TCP
  general:
    validate: true
    batchMaxBytes: 838860800 # 800MB
    batchSize:
      limitBatchSize: true
      batchMaxSize: 1000
  TASK:
    types:
      - jobType: 'Ingestion_Update'
        taskType: 'tilesMerging'
      - jobType: 'Ingestion_New'
        taskType: 'tilesMerging'
    pollingTime: 1000
    maxAttempts: 3
  heartbeat:
    intervalMs: 300
  HTTP:
    retries: 2
  logging:
    logLevel:
      default: "Information"
      aspNetCore: "Warning"
  tracing:
    enabled: false
    url: http://localhost:4317/v1/trace
    ratio: 0.01
  metrics:
    enabled: true
    scrape: true
    port: 9500
    measurementBuckets: "[0.001, 0.005, 0.01, 0.025, 0.05, 0.1, 0.25, 0.5, 1, 2.5, 5, 10, 15, 50,250, 500]"

resources:
  enabled: true
  value:
    limits:
      cpu: "1"
      memory: 4Gi
    requests:
      cpu: "1"
      memory: 4Gi

route:
  enabled: false
  path: /
  timeout:
    enabled: false # defaults to 30s by openshift
    duration: 60s # supported units (us, ms, s, m, h, d)
    
local:
  s3:
    secret:
      create: false
      accessKeyId: minikube
      secretAccessKey: minikube
  storage:
    internalPv:
      create: false #for local deployment only
      name: local-tiles-pv
      storage: 5Gi
      hostPath: '/tiles' #tiles hostPatch
    ingestionPv:
      create: false #for local deployment only
      name: local-sources-pv
      storage: 5Gi
      hostPath: /layerSources
    internalPvc:
      create: false #for local deployment only
      storage: 4Gi
    ingestionSourcePvc:
      create: false #for local deployment only
      storage: 4Gi
    accessModes: ReadWriteOnce
    storageClassName: host-path