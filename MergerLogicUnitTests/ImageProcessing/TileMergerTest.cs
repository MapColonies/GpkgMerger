using MergerLogic.Batching;
using MergerLogic.DataTypes;
using MergerLogic.ImageProcessing;
using MergerLogic.Monitoring.Metrics;
using Microsoft.Extensions.Logging;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Moq;
using System;
using System.Collections.Generic;
using System.Linq;

namespace MergerLogicUnitTests.ImageProcessing
{
    [TestClass]
    [TestCategory("unit")]
    [TestCategory("imageProcessing")]
    public class TileMergerTest
    {

        #region mocks

        private MockRepository _mockRepository;

        private TileMerger _testTileMerger;

        #endregion

        [TestInitialize]
        public void BeforeEach()
        {
            this._mockRepository = new MockRepository(MockBehavior.Loose);

            var metricsProviderMock = this._mockRepository.Create<IMetricsProvider>();
            var tileScalerLoggerMock = this._mockRepository.Create<ILogger<TileScaler>>();
            var tileMergerLoggerMock = this._mockRepository.Create<ILogger<TileMerger>>();

            var testTileScaler = new TileScaler(metricsProviderMock.Object, tileScalerLoggerMock.Object);
            var testImageFormatter = new ImageFormatter();

            this._testTileMerger = new TileMerger(testTileScaler, testImageFormatter, tileMergerLoggerMock.Object);
        }

        #region MergeTiles

        public static IEnumerable<object[]> GetMergeTilesTestParameters()
        {
            var targetCoord = new Coord(9, 608, 343);
            var firstTileBase64 = "/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDACAWGBwYFCAcGhwkIiAmMFA0MCwsMGJGSjpQdGZ6eHJmcG6AkLicgIiuim5woNqirr7EztDOfJri8uDI8LjKzsb/2wBDASIkJDAqMF40NF7GhHCExsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsb/wAARCAEAAQADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwC5RRRWBoFFFFABRRRQAUUUUAFFFFABRRRQAtFFFABRRRQA6iiimAUUUUALRRRQAlFFFACUUUUAJRRRQAlFFFMAooopAFFFFIAooooAKKKKACiiigAooooAKKKKAFooooAKKKKACiiimAtFFFAC0UUUAFFFFACUUUUAJRRRQAUUUUAJRRRQAUUUUgCiiigAooooAKKKKACiiigAooooAWiiimAUUUUANooooAWiiigB1FFFABRRRQAUUUUAFFFFACUUUUAFFFFADaKKKACiiikAtFFFMAooopAFFFFMAooooAKKKKACiiigBKKKKACiiigBaKKKAFooooAKKKKACiiigAooooAKKKKAGUUUUAFFFFAC0UUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFAC0UUUgCiiimAUUUUAMooooAKKKKAFooooAKKKKACiiigAooooAKKKKACiiigB1FFFACUUUUAJRRRQAUUUUgFooooAKKKKAFooooAKKKKAG0UUUwCiiigAooooAWiiigAooooAKKKKACiiigAooooAWiiigBKKKKACiiikAUUUUALRRRQAUUUUAFFFFACUUUUAFFFFUAUUUUALRRRSAKKKKACiiigAooooAKKKKACiiigBKKKKACiiigAooooAWiiikAtFFFABRRRQAlFFFACUUUUAOoooqgCiiigAooooAKKKKQDaKKKACiiigBaKKKAFooooAKKKKAG0UUUAJRRRQA6iiikA+iiigAooooAZRRRQA2iiigB9FFFUAUUUUAFFFFACUUUUAJRRRSAKKKKACiiigBaKKKACiiigAooooAWiiigBKKKKAEooooAKKKKQBRRRQAtFFFMAooooAWiiigAooooASiiigBKKKKACiiigAooooAWiiigAooooAWiiigBaKKKAEooooAZRRRQAlFFFABRRRQAtFFFADqKKKACiiigBaKKKAEooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigBKKKKAGUUUUANooooAbRRRQBYooooAKKKKAFooooAKKKKACiiigAooooAKKKKACiiigBtFFFABRRRQAlFFFACUUUUANooooAbRRRQA2iiigBKKKKALVFFFABRRRQAtFFFABRRRQAUUUUAFFFFABRRRQAUUUUAJRRRQAUUUUAJRRRQAyiiigCOiiigBtFFFMB1FFFAD6KKKAJaKKKQBRRRQAtFFFABRRRQAUUUUAFFFFABRRRQAlFFFABRRRQAUUUUANooopgMooooAZRRRQAUUUUAPooooAfRRRQA+iiikAUUUUAFFFFABRRRQAUUUUAJRRRQAUUUUAJRRRQAUUUUANooooAZRRRQAlFFFMAooooAdRRRQAUUUUAFFFFAH//2Q==";
            var secondTileBase64 = "";

            yield return new object[] {
                new Tile[] {
                    new Tile(targetCoord, Convert.FromBase64String(firstTileBase64)),
                    new Tile(targetCoord, Convert.FromBase64String(secondTileBase64))
                }, targetCoord, TileFormat.Jpeg,
                "/9j/4AAQSkZJRgABAQAAAAAAAAD/2wBDACAWGBwYFCAcGhwkIiAmMFA0MCwsMGJGSjpQdGZ6eHJmcG6AkLicgIiuim5woNqirr7EztDOfJri8uDI8LjKzsb/2wBDASIkJDAqMF40NF7GhHCExsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsb/wAARCAEAAQADASIAAhEBAxEB/8QAGgABAQEAAwEAAAAAAAAAAAAAAAECAwQFBv/EADcQAQABAwIDBAYHCQAAAAAAAAABAgMRBCEFEjETQVGBFCI1obHBFSNCkaLR4TJDU2FkcXKC8P/EABcBAQEBAQAAAAAAAAAAAAAAAAABAgP/xAAbEQEBAQACAwAAAAAAAAAAAAAAAQIRMSFBUf/aAAwDAQACEQMRAD8A7gDg6AAAAAAAAAAKAAADQCgACgAgAI+c4r7Ru+Xwh9G87V8K9J1Fd3tuXmxty57seLWbxUry9Bc7PVU56VerL2PN5Ov0PofZ/Wc/Pn7OMYx+b07NyLtim54x3ePe1frMaif+woIpJncOvUHbAc2gAAAAAAAAAFAAAAAUUAFAAABAAePx79x/t8nHwm5OK7Wcfaj5/J6er0VvV8naVVxyZxyz4vDoqjS8Q2n1aLk05nfbo3PM4Zvb2cTvnKcuY2lyzuk0RgHH3eCY8XJNON4ndjAO2A5tAAAAAAAAAAKAoAAyACgA0AAAAAA6nFfZ13y+MO26nFfZ13y+MLOyuHh92Lujp2xNHqz5fo7MTjq8bhd3kvzRPSuPg9mMTDdYZmfBmW8xE90lUR4ormAYaAEFAUAEABQAAAAABAAAAUAFAAAAdTivs675fGHbdfiFqu9o7lu3HNVOMRn+cLOyvnKKporprjGaZid3vW64roprjpVETDyvozWfwfxR+btcMu81ibeP2J90t1iO7mc5+5uado97jjq5KapicdYRXKAw0AAoAAAAAAAAAAAAAAAAAAAAAKAgPm9Bd7LU07bV+r976R8m6ZZ0+hXu6OLTXe109FffMb/3cgOwAw0AAoAAAAAAAAAAANAAgAIAAAgoAAAK+TfWPJ+hP6j8H6t5siWOHhVzeu1P+UfP5PRePXR6Dr+XmmrkmMzEdYmN/i9lqpHYAc2gAAAFAAAAAAAAABQAQAABAABQAAAAAeNr9Dqb2suXLdvNM4xPNHhDnsUXbViim9TNNUbdY+T0XU1l2KL1mmZxFcVR57N516ZsdsBGgAFAQAAAAAAAAAAQAAAAAFAQUAAAEABHl8aqmmrT1U7TE1THueo4r+ms6jl7ajm5em8wsvFSucBVAAAAAEGQAAAUAFAAABkAEABoBBsAAAGAAZABsBoAAAAQAEAQAAAAUAAAAAFABAAQAABAABQFAAFAAABAAQAAAAAFAAABQAUAEABgAEAAABQAaAAABQAQAAAAAAAAAAAAAAAAAEABgAGQAZAB2AAAAUAAAAAAAAAAAGQAAAQAEABkAGQAZABAAdoAAAFAAAAAAAAAAABAAAAQAGAAcYAMgKNAA2ADlAQAAUAAAAAAAAAEAAAAABkBRgAGAAAAbABsAGwEAAAAAAAAEAAABAAAAZABgAEAUAAaAAAAAB//2Q=="
            };
        }

        [TestMethod]
        [TestCategory("MergeTiles")]
        [DynamicData(nameof(GetMergeTilesTestParameters), DynamicDataSourceType.Method)]
        public void MergeTiles(Tile[] testTiles, Coord testTargetCoord, TileFormat testTileFormat, string expectedTileBytesBase64)
        {
            var tileBuilders = testTiles.Select<Tile, CorrespondingTileBuilder>(tile => () => tile).ToList();
            var result = this._testTileMerger.MergeTiles(tileBuilders, testTargetCoord, testTileFormat);

            Assert.IsNotNull(result);
            Assert.AreEqual(expectedTileBytesBase64, Convert.ToBase64String(result));
        }

        #endregion
    }
}
